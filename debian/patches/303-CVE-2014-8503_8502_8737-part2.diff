#! /bin/sh /usr/share/dpatch/dpatch-run
Description: Fix for CVE-2014-8503 CVE-2014-8502 CVE-2014-8737
Author: Luciano Bello <luciano@debian.org>
Origin: backport: https://sourceware.org/git/gitweb.cgi?p=binutils-gdb.git;h=32a9d621c3c480aa093a089a36e36c35f68a4010
        backport: https://sourceware.org/git/gitweb.cgi?p=binutils-gdb.git;h=690725fa0d98ae52c991f4b3ea58b6b47b4fbc80
        backport: https://sourceware.org/git/gitweb.cgi?p=binutils-gdb.git;h=a5c71af8d3c7c535f27614947f72883233658706
Applied-Upstream: commit:32a9d621c3c480aa093a089a36e36c35f68a4010
                  commit:690725fa0d98ae52c991f4b3ea58b6b47b4fbc80
                  commit:a5c71af8d3c7c535f27614947f72883233658706
---
@DPATCH@
--- a/binutils/readelf.c
+++ b/binutils/readelf.c
@@ -3993,12 +3993,19 @@
 get_64bit_elf_symbols (FILE * file, Elf_Internal_Shdr * section)
 {
   unsigned long number;
-  Elf64_External_Sym * esyms;
-  Elf_External_Sym_Shndx * shndx;
-  Elf_Internal_Sym * isyms;
+  Elf64_External_Sym * esyms = NULL;
+  Elf_External_Sym_Shndx * shndx = NULL;
+  Elf_Internal_Sym * isyms = NULL;
   Elf_Internal_Sym * psym;
   unsigned int j;
 
+  if (section->sh_size > current_file_size)
+    {
+      error (_("Section %s has an invalid sh_size of 0x%lx\n"),
+            printable_section_name (section), (unsigned long) section->sh_size);
+      goto exit_point;
+    }
+
   esyms = (Elf64_External_Sym *) get_data (NULL, file, section->sh_offset, 1,
                                            section->sh_size, _("symbols"));
   if (!esyms)
